import React, { useState, useEffect, } from 'react';
import { View, Text, TouchableOpacity , StyleSheet, TextInput, FlatList, ScrollView,Switch,Image} from 'react-native';
import firestore from "@react-native-firebase/firestore";

const RecipeTab = ( {navigation} ) => {
 // const [showUserRecipes, setShowUserRecipes] = useState(false);
  const [recipeData, setRecipeData] = useState([]);
 // const [refrigeratorIngredients, setRefrigeratorIngredients] = useState([]);
//  const [bookmarkedRecipes, setBookmarkedRecipes] = useState([]);

  useEffect(() => {

    const userId = 'xxvkRzKqFcWLVx4hWCM8GgQf1hE3';
    fetchRecipeData(userId);
//    fetchBookmarkedRecipes();
  }, []);

/*const handleToggleSwitch = () => {
  setShowUserRecipes((prev) => !prev);
};*/

const fetchRecipeData = async(userId) => {
  try {
    const userId = 'xxvkRzKqFcWLVx4hWCM8GgQf1hE3';
    const userBookmarkStr = ["1", "2", "3","4", "5", "6","7", "8", "9","10",
    "11", "12", "13","14", "15", "16","17", "18", "19","20",
    "21", "22", "23","24", "25", "26","27", "28", "29","30",
    "31", "32", "33","34", "35", "36","37", "38", "39","40",
    "41", "42", "43","44", "45", "46","47", "48", "49","50",
    "51", "52", "53","54", "55", "56","57", "58", "59","60",
    "61", "62", "63","64", "65", "66","67", "68", "69","70",
    "71", "72", "73","74", "75", "76","77", "78", "79","80",
    "81", "82", "83","84", "85", "86","87", "88", "89","90",
    "91", "92", "93","94", "95", "96","97", "98", "99","100"];
    let fetchedRecipes = [];
    for (const docName of userBookmarkStr) {
      const recipeRef = firestore().collection('recipes').doc(docName);
      const recipeSnapshot = await recipeRef.get();
      if (recipeSnapshot.exists) {
        const recipeData = recipeSnapshot.data();
        const recipeContents = {
          id: docName,
          name: recipeData.recipe_name,
          image: recipeData.recipe_image,
          time: recipeData.recipe_time,
        };
        fetchedRecipes.push(recipeContents);
      } else {
        console.warn(`레시피 문서 "${docName}"을(를) 찾을 수 없습니다.`);
      }
    }


    setRecipeData(fetchedRecipes);
  } catch (error) {
    console.error('북마크 레시피를 가져오는데 실패했습니다.', error);
  }
};

/*const displayLackingIngredients = async (recipeId, recipeIngredients) => {
  const lackingIngredients = compareIngredients(refrigeratorIngredients, recipeIngredients);
  if (lackingIngredients.length > 0){
    try{
      const lackId = await addLackToCollection({ recipeId, lackingIngredients });
      console.log('Lack added with ID: ', lackId);
    } catch (error) {
      console.error('Error adding lack: ', error);
    }
  }
  return lackingIngredients.join(', ');
};*/
  
/*const handleSortOrder = async (orderType) => {
  switch (orderType) {
    case 'korean':
      const koreanOrder = await orderByKorean();
      setRecipeData(koreanOrder);
      break;
    case 'lack':
      const lackOrder = await refrigeratorOrderByLack(refrigeratorIngredients);
      setRecipeData(lackOrder);
      break;
    default:
      break;
  }
};*/

return (
  <ScrollView style={styles.container}>
    <View>
      {/* Display your bookmarked recipes here */}
      {recipeData.map((recipe) => (
        <TouchableOpacity
          key={recipe.id}
          style={styles.post}
          onPress={() => navigation.navigate('RecipeDetail', { recipeId: recipe.id })}>
          <Image source={{ uri: recipe.image }} style={{ width: 118, height: 66, left: 12, top: 11, borderRadius: 7 }} />
          <Text style={styles.foodText}>{recipe.name}</Text>
          <View style={{ left: 12, top: 15 }}>
          </View>
          <Text style={styles.timeText}>
            {recipe.time[0] !== 0 && `${recipe.time[0]} 시간 `}
            {recipe.time[1] !== 0 && `${recipe.time[1]} 분`}
          </Text>
        </TouchableOpacity>
        ))}
      </View>
    </ScrollView>
  );
};



const styles = StyleSheet.create({
    container: {
    backgroundColor: '#F8F9FA', // 배경색상 추가
    height: 'auto',
  },
  containerScroll: {
    top: 90,
    backgroundColor: '#F8F9FA', // 배경색상 추가
    height: 'auto',
  marginBottom: 170,
  },
  cont: {
    flexDirections: 'row',
    justifyContent: 'center',
    felxWrap: 'wrap',
  },
  post: {
    position: 'relative',
    width: 141,
    height: 154,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    paddingVertical: 3,
    alignContent: 'flex-start',
    shadowColor: "#000000",
    shadowOffset: {
      width: 10,
      height: 10,
    },
    shadowOpacity: 0.25,
    shadowRadius: 10,
    elevation: 5,
  },
  foodText: {
    top: 14,
    paddingLeft: 12,
    fontWeight: 'bold',
  },
  lackingText: {
    paddingLeft: 2,
    bottom: 7,
    color: '#E50000',
    fontSize: 10,
    fontFamily: 'NanumGothic',
  },
  timeText: {
    paddingLeft: 10,
    top: 10,
    color: '#000',
    fontSize: 12,
    margin: 5,
    fontFamily: 'NanumGothic',
  },
  row: {
    flexDirection: 'row', 
    display:'flex',
    flexWrap:'wrap',
    justifyContent: 'space-around', 
    position: 'relative', 
    paddingHorizontal: 40, 
    paddingBottom: 80, 
    gap: 20,
    
  },
});

export default RecipeTab;
